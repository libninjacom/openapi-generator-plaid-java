/*
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.Deductions;
import org.openapitools.client.model.Earnings;
import org.openapitools.client.model.Employee;
import org.openapitools.client.model.EmploymentDetails;
import org.openapitools.client.model.IncomeBreakdown;
import org.openapitools.client.model.NetPay;
import org.openapitools.client.model.PayPeriodDetails;
import org.openapitools.client.model.PaystubDetails;
import org.openapitools.client.model.PaystubEmployer;
import org.openapitools.client.model.PaystubVerification;
import org.openapitools.client.model.PaystubYTDDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An object representing data extracted from the end user&#39;s paystub.
 */
@ApiModel(description = "An object representing data extracted from the end user's paystub.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-13T10:01:14.758140-04:00[America/New_York]")
public class Paystub {
  public static final String SERIALIZED_NAME_DEDUCTIONS = "deductions";
  @SerializedName(SERIALIZED_NAME_DEDUCTIONS)
  private Deductions deductions;

  public static final String SERIALIZED_NAME_DOC_ID = "doc_id";
  @SerializedName(SERIALIZED_NAME_DOC_ID)
  private String docId;

  public static final String SERIALIZED_NAME_EARNINGS = "earnings";
  @SerializedName(SERIALIZED_NAME_EARNINGS)
  private Earnings earnings;

  public static final String SERIALIZED_NAME_EMPLOYEE = "employee";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE)
  private Employee employee;

  public static final String SERIALIZED_NAME_EMPLOYER = "employer";
  @SerializedName(SERIALIZED_NAME_EMPLOYER)
  private PaystubEmployer employer;

  public static final String SERIALIZED_NAME_EMPLOYMENT_DETAILS = "employment_details";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_DETAILS)
  private EmploymentDetails employmentDetails;

  public static final String SERIALIZED_NAME_NET_PAY = "net_pay";
  @SerializedName(SERIALIZED_NAME_NET_PAY)
  private NetPay netPay;

  public static final String SERIALIZED_NAME_PAY_PERIOD_DETAILS = "pay_period_details";
  @SerializedName(SERIALIZED_NAME_PAY_PERIOD_DETAILS)
  private PayPeriodDetails payPeriodDetails;

  public static final String SERIALIZED_NAME_PAYSTUB_DETAILS = "paystub_details";
  @SerializedName(SERIALIZED_NAME_PAYSTUB_DETAILS)
  private PaystubDetails paystubDetails;

  public static final String SERIALIZED_NAME_INCOME_BREAKDOWN = "income_breakdown";
  @SerializedName(SERIALIZED_NAME_INCOME_BREAKDOWN)
  private List<IncomeBreakdown> incomeBreakdown = null;

  public static final String SERIALIZED_NAME_YTD_EARNINGS = "ytd_earnings";
  @SerializedName(SERIALIZED_NAME_YTD_EARNINGS)
  private PaystubYTDDetails ytdEarnings;

  public static final String SERIALIZED_NAME_VERIFICATION = "verification";
  @SerializedName(SERIALIZED_NAME_VERIFICATION)
  private PaystubVerification verification;

  public Paystub() { 
  }

  public Paystub deductions(Deductions deductions) {
    
    this.deductions = deductions;
    return this;
  }

   /**
   * Get deductions
   * @return deductions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Deductions getDeductions() {
    return deductions;
  }


  public void setDeductions(Deductions deductions) {
    this.deductions = deductions;
  }


  public Paystub docId(String docId) {
    
    this.docId = docId;
    return this;
  }

   /**
   * An identifier of the document referenced by the document metadata.
   * @return docId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An identifier of the document referenced by the document metadata.")

  public String getDocId() {
    return docId;
  }


  public void setDocId(String docId) {
    this.docId = docId;
  }


  public Paystub earnings(Earnings earnings) {
    
    this.earnings = earnings;
    return this;
  }

   /**
   * Get earnings
   * @return earnings
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Earnings getEarnings() {
    return earnings;
  }


  public void setEarnings(Earnings earnings) {
    this.earnings = earnings;
  }


  public Paystub employee(Employee employee) {
    
    this.employee = employee;
    return this;
  }

   /**
   * Get employee
   * @return employee
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Employee getEmployee() {
    return employee;
  }


  public void setEmployee(Employee employee) {
    this.employee = employee;
  }


  public Paystub employer(PaystubEmployer employer) {
    
    this.employer = employer;
    return this;
  }

   /**
   * Get employer
   * @return employer
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public PaystubEmployer getEmployer() {
    return employer;
  }


  public void setEmployer(PaystubEmployer employer) {
    this.employer = employer;
  }


  public Paystub employmentDetails(EmploymentDetails employmentDetails) {
    
    this.employmentDetails = employmentDetails;
    return this;
  }

   /**
   * Get employmentDetails
   * @return employmentDetails
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EmploymentDetails getEmploymentDetails() {
    return employmentDetails;
  }


  public void setEmploymentDetails(EmploymentDetails employmentDetails) {
    this.employmentDetails = employmentDetails;
  }


  public Paystub netPay(NetPay netPay) {
    
    this.netPay = netPay;
    return this;
  }

   /**
   * Get netPay
   * @return netPay
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public NetPay getNetPay() {
    return netPay;
  }


  public void setNetPay(NetPay netPay) {
    this.netPay = netPay;
  }


  public Paystub payPeriodDetails(PayPeriodDetails payPeriodDetails) {
    
    this.payPeriodDetails = payPeriodDetails;
    return this;
  }

   /**
   * Get payPeriodDetails
   * @return payPeriodDetails
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public PayPeriodDetails getPayPeriodDetails() {
    return payPeriodDetails;
  }


  public void setPayPeriodDetails(PayPeriodDetails payPeriodDetails) {
    this.payPeriodDetails = payPeriodDetails;
  }


  public Paystub paystubDetails(PaystubDetails paystubDetails) {
    
    this.paystubDetails = paystubDetails;
    return this;
  }

   /**
   * Get paystubDetails
   * @return paystubDetails
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PaystubDetails getPaystubDetails() {
    return paystubDetails;
  }


  public void setPaystubDetails(PaystubDetails paystubDetails) {
    this.paystubDetails = paystubDetails;
  }


  public Paystub incomeBreakdown(List<IncomeBreakdown> incomeBreakdown) {
    
    this.incomeBreakdown = incomeBreakdown;
    return this;
  }

  public Paystub addIncomeBreakdownItem(IncomeBreakdown incomeBreakdownItem) {
    if (this.incomeBreakdown == null) {
      this.incomeBreakdown = new ArrayList<>();
    }
    this.incomeBreakdown.add(incomeBreakdownItem);
    return this;
  }

   /**
   * Get incomeBreakdown
   * @return incomeBreakdown
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<IncomeBreakdown> getIncomeBreakdown() {
    return incomeBreakdown;
  }


  public void setIncomeBreakdown(List<IncomeBreakdown> incomeBreakdown) {
    this.incomeBreakdown = incomeBreakdown;
  }


  public Paystub ytdEarnings(PaystubYTDDetails ytdEarnings) {
    
    this.ytdEarnings = ytdEarnings;
    return this;
  }

   /**
   * Get ytdEarnings
   * @return ytdEarnings
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PaystubYTDDetails getYtdEarnings() {
    return ytdEarnings;
  }


  public void setYtdEarnings(PaystubYTDDetails ytdEarnings) {
    this.ytdEarnings = ytdEarnings;
  }


  public Paystub verification(PaystubVerification verification) {
    
    this.verification = verification;
    return this;
  }

   /**
   * Get verification
   * @return verification
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public PaystubVerification getVerification() {
    return verification;
  }


  public void setVerification(PaystubVerification verification) {
    this.verification = verification;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   */
  public Paystub putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Paystub paystub = (Paystub) o;
    return Objects.equals(this.deductions, paystub.deductions) &&
        Objects.equals(this.docId, paystub.docId) &&
        Objects.equals(this.earnings, paystub.earnings) &&
        Objects.equals(this.employee, paystub.employee) &&
        Objects.equals(this.employer, paystub.employer) &&
        Objects.equals(this.employmentDetails, paystub.employmentDetails) &&
        Objects.equals(this.netPay, paystub.netPay) &&
        Objects.equals(this.payPeriodDetails, paystub.payPeriodDetails) &&
        Objects.equals(this.paystubDetails, paystub.paystubDetails) &&
        Objects.equals(this.incomeBreakdown, paystub.incomeBreakdown) &&
        Objects.equals(this.ytdEarnings, paystub.ytdEarnings) &&
        Objects.equals(this.verification, paystub.verification)&&
        Objects.equals(this.additionalProperties, paystub.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deductions, docId, earnings, employee, employer, employmentDetails, netPay, payPeriodDetails, paystubDetails, incomeBreakdown, ytdEarnings, verification, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Paystub {\n");
    sb.append("    deductions: ").append(toIndentedString(deductions)).append("\n");
    sb.append("    docId: ").append(toIndentedString(docId)).append("\n");
    sb.append("    earnings: ").append(toIndentedString(earnings)).append("\n");
    sb.append("    employee: ").append(toIndentedString(employee)).append("\n");
    sb.append("    employer: ").append(toIndentedString(employer)).append("\n");
    sb.append("    employmentDetails: ").append(toIndentedString(employmentDetails)).append("\n");
    sb.append("    netPay: ").append(toIndentedString(netPay)).append("\n");
    sb.append("    payPeriodDetails: ").append(toIndentedString(payPeriodDetails)).append("\n");
    sb.append("    paystubDetails: ").append(toIndentedString(paystubDetails)).append("\n");
    sb.append("    incomeBreakdown: ").append(toIndentedString(incomeBreakdown)).append("\n");
    sb.append("    ytdEarnings: ").append(toIndentedString(ytdEarnings)).append("\n");
    sb.append("    verification: ").append(toIndentedString(verification)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("deductions");
    openapiFields.add("doc_id");
    openapiFields.add("earnings");
    openapiFields.add("employee");
    openapiFields.add("employer");
    openapiFields.add("employment_details");
    openapiFields.add("net_pay");
    openapiFields.add("pay_period_details");
    openapiFields.add("paystub_details");
    openapiFields.add("income_breakdown");
    openapiFields.add("ytd_earnings");
    openapiFields.add("verification");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("deductions");
    openapiRequiredFields.add("doc_id");
    openapiRequiredFields.add("earnings");
    openapiRequiredFields.add("employee");
    openapiRequiredFields.add("employer");
    openapiRequiredFields.add("net_pay");
    openapiRequiredFields.add("pay_period_details");
    openapiRequiredFields.add("verification");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Paystub
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (Paystub.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in Paystub is not found in the empty JSON string", Paystub.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Paystub.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("doc_id") != null && !jsonObj.get("doc_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `doc_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("doc_id").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("income_breakdown") != null && !jsonObj.get("income_breakdown").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `income_breakdown` to be an array in the JSON string but got `%s`", jsonObj.get("income_breakdown").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Paystub.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Paystub' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Paystub> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Paystub.class));

       return (TypeAdapter<T>) new TypeAdapter<Paystub>() {
           @Override
           public void write(JsonWriter out, Paystub value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public Paystub read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             Paystub instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else { // non-primitive type
                   instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Paystub given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Paystub
  * @throws IOException if the JSON string is invalid with respect to Paystub
  */
  public static Paystub fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Paystub.class);
  }

 /**
  * Convert an instance of Paystub to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

