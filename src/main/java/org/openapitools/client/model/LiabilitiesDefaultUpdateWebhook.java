/*
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.PlaidError;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The webhook of type &#x60;LIABILITIES&#x60; and code &#x60;DEFAULT_UPDATE&#x60; will be fired when new or updated liabilities have been detected on a liabilities item.
 */
@ApiModel(description = "The webhook of type `LIABILITIES` and code `DEFAULT_UPDATE` will be fired when new or updated liabilities have been detected on a liabilities item.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-13T10:01:14.758140-04:00[America/New_York]")
public class LiabilitiesDefaultUpdateWebhook {
  public static final String SERIALIZED_NAME_WEBHOOK_TYPE = "webhook_type";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_TYPE)
  private String webhookType;

  public static final String SERIALIZED_NAME_WEBHOOK_CODE = "webhook_code";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_CODE)
  private String webhookCode;

  public static final String SERIALIZED_NAME_ITEM_ID = "item_id";
  @SerializedName(SERIALIZED_NAME_ITEM_ID)
  private String itemId;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private PlaidError error;

  public static final String SERIALIZED_NAME_ACCOUNT_IDS_WITH_NEW_LIABILITIES = "account_ids_with_new_liabilities";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_IDS_WITH_NEW_LIABILITIES)
  private List<String> accountIdsWithNewLiabilities = new ArrayList<>();

  public static final String SERIALIZED_NAME_ACCOUNT_IDS_WITH_UPDATED_LIABILITIES = "account_ids_with_updated_liabilities";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_IDS_WITH_UPDATED_LIABILITIES)
  private Map<String, List<String>> accountIdsWithUpdatedLiabilities = new HashMap<>();

  public LiabilitiesDefaultUpdateWebhook() { 
  }

  public LiabilitiesDefaultUpdateWebhook webhookType(String webhookType) {
    
    this.webhookType = webhookType;
    return this;
  }

   /**
   * &#x60;LIABILITIES&#x60;
   * @return webhookType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "`LIABILITIES`")

  public String getWebhookType() {
    return webhookType;
  }


  public void setWebhookType(String webhookType) {
    this.webhookType = webhookType;
  }


  public LiabilitiesDefaultUpdateWebhook webhookCode(String webhookCode) {
    
    this.webhookCode = webhookCode;
    return this;
  }

   /**
   * &#x60;DEFAULT_UPDATE&#x60;
   * @return webhookCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "`DEFAULT_UPDATE`")

  public String getWebhookCode() {
    return webhookCode;
  }


  public void setWebhookCode(String webhookCode) {
    this.webhookCode = webhookCode;
  }


  public LiabilitiesDefaultUpdateWebhook itemId(String itemId) {
    
    this.itemId = itemId;
    return this;
  }

   /**
   * The &#x60;item_id&#x60; of the Item associated with this webhook, warning, or error
   * @return itemId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The `item_id` of the Item associated with this webhook, warning, or error")

  public String getItemId() {
    return itemId;
  }


  public void setItemId(String itemId) {
    this.itemId = itemId;
  }


  public LiabilitiesDefaultUpdateWebhook error(PlaidError error) {
    
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public PlaidError getError() {
    return error;
  }


  public void setError(PlaidError error) {
    this.error = error;
  }


  public LiabilitiesDefaultUpdateWebhook accountIdsWithNewLiabilities(List<String> accountIdsWithNewLiabilities) {
    
    this.accountIdsWithNewLiabilities = accountIdsWithNewLiabilities;
    return this;
  }

  public LiabilitiesDefaultUpdateWebhook addAccountIdsWithNewLiabilitiesItem(String accountIdsWithNewLiabilitiesItem) {
    this.accountIdsWithNewLiabilities.add(accountIdsWithNewLiabilitiesItem);
    return this;
  }

   /**
   * An array of &#x60;account_id&#x60;&#39;s for accounts that contain new liabilities.&#39;
   * @return accountIdsWithNewLiabilities
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An array of `account_id`'s for accounts that contain new liabilities.'")

  public List<String> getAccountIdsWithNewLiabilities() {
    return accountIdsWithNewLiabilities;
  }


  public void setAccountIdsWithNewLiabilities(List<String> accountIdsWithNewLiabilities) {
    this.accountIdsWithNewLiabilities = accountIdsWithNewLiabilities;
  }


  public LiabilitiesDefaultUpdateWebhook accountIdsWithUpdatedLiabilities(Map<String, List<String>> accountIdsWithUpdatedLiabilities) {
    
    this.accountIdsWithUpdatedLiabilities = accountIdsWithUpdatedLiabilities;
    return this;
  }

  public LiabilitiesDefaultUpdateWebhook putAccountIdsWithUpdatedLiabilitiesItem(String key, List<String> accountIdsWithUpdatedLiabilitiesItem) {
    this.accountIdsWithUpdatedLiabilities.put(key, accountIdsWithUpdatedLiabilitiesItem);
    return this;
  }

   /**
   * An object with keys of &#x60;account_id&#x60;&#39;s that are mapped to their respective liabilities fields that changed.  Example: &#x60;{ \&quot;XMBvvyMGQ1UoLbKByoMqH3nXMj84ALSdE5B58\&quot;: [\&quot;past_amount_due\&quot;] }&#x60; 
   * @return accountIdsWithUpdatedLiabilities
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An object with keys of `account_id`'s that are mapped to their respective liabilities fields that changed.  Example: `{ \"XMBvvyMGQ1UoLbKByoMqH3nXMj84ALSdE5B58\": [\"past_amount_due\"] }` ")

  public Map<String, List<String>> getAccountIdsWithUpdatedLiabilities() {
    return accountIdsWithUpdatedLiabilities;
  }


  public void setAccountIdsWithUpdatedLiabilities(Map<String, List<String>> accountIdsWithUpdatedLiabilities) {
    this.accountIdsWithUpdatedLiabilities = accountIdsWithUpdatedLiabilities;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LiabilitiesDefaultUpdateWebhook liabilitiesDefaultUpdateWebhook = (LiabilitiesDefaultUpdateWebhook) o;
    return Objects.equals(this.webhookType, liabilitiesDefaultUpdateWebhook.webhookType) &&
        Objects.equals(this.webhookCode, liabilitiesDefaultUpdateWebhook.webhookCode) &&
        Objects.equals(this.itemId, liabilitiesDefaultUpdateWebhook.itemId) &&
        Objects.equals(this.error, liabilitiesDefaultUpdateWebhook.error) &&
        Objects.equals(this.accountIdsWithNewLiabilities, liabilitiesDefaultUpdateWebhook.accountIdsWithNewLiabilities) &&
        Objects.equals(this.accountIdsWithUpdatedLiabilities, liabilitiesDefaultUpdateWebhook.accountIdsWithUpdatedLiabilities);
  }

  @Override
  public int hashCode() {
    return Objects.hash(webhookType, webhookCode, itemId, error, accountIdsWithNewLiabilities, accountIdsWithUpdatedLiabilities);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LiabilitiesDefaultUpdateWebhook {\n");
    sb.append("    webhookType: ").append(toIndentedString(webhookType)).append("\n");
    sb.append("    webhookCode: ").append(toIndentedString(webhookCode)).append("\n");
    sb.append("    itemId: ").append(toIndentedString(itemId)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    accountIdsWithNewLiabilities: ").append(toIndentedString(accountIdsWithNewLiabilities)).append("\n");
    sb.append("    accountIdsWithUpdatedLiabilities: ").append(toIndentedString(accountIdsWithUpdatedLiabilities)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("webhook_type");
    openapiFields.add("webhook_code");
    openapiFields.add("item_id");
    openapiFields.add("error");
    openapiFields.add("account_ids_with_new_liabilities");
    openapiFields.add("account_ids_with_updated_liabilities");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("webhook_type");
    openapiRequiredFields.add("webhook_code");
    openapiRequiredFields.add("item_id");
    openapiRequiredFields.add("error");
    openapiRequiredFields.add("account_ids_with_new_liabilities");
    openapiRequiredFields.add("account_ids_with_updated_liabilities");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to LiabilitiesDefaultUpdateWebhook
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (LiabilitiesDefaultUpdateWebhook.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in LiabilitiesDefaultUpdateWebhook is not found in the empty JSON string", LiabilitiesDefaultUpdateWebhook.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!LiabilitiesDefaultUpdateWebhook.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LiabilitiesDefaultUpdateWebhook` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : LiabilitiesDefaultUpdateWebhook.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("webhook_type") != null && !jsonObj.get("webhook_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webhook_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webhook_type").toString()));
      }
      if (jsonObj.get("webhook_code") != null && !jsonObj.get("webhook_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webhook_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webhook_code").toString()));
      }
      if (jsonObj.get("item_id") != null && !jsonObj.get("item_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `item_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("item_id").toString()));
      }
      // validate the optional field `error`
      if (jsonObj.getAsJsonObject("error") != null) {
        PlaidError.validateJsonObject(jsonObj.getAsJsonObject("error"));
      }
      // ensure the json data is an array
      if (jsonObj.get("account_ids_with_new_liabilities") != null && !jsonObj.get("account_ids_with_new_liabilities").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_ids_with_new_liabilities` to be an array in the JSON string but got `%s`", jsonObj.get("account_ids_with_new_liabilities").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LiabilitiesDefaultUpdateWebhook.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LiabilitiesDefaultUpdateWebhook' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LiabilitiesDefaultUpdateWebhook> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LiabilitiesDefaultUpdateWebhook.class));

       return (TypeAdapter<T>) new TypeAdapter<LiabilitiesDefaultUpdateWebhook>() {
           @Override
           public void write(JsonWriter out, LiabilitiesDefaultUpdateWebhook value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LiabilitiesDefaultUpdateWebhook read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of LiabilitiesDefaultUpdateWebhook given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of LiabilitiesDefaultUpdateWebhook
  * @throws IOException if the JSON string is invalid with respect to LiabilitiesDefaultUpdateWebhook
  */
  public static LiabilitiesDefaultUpdateWebhook fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LiabilitiesDefaultUpdateWebhook.class);
  }

 /**
  * Convert an instance of LiabilitiesDefaultUpdateWebhook to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

