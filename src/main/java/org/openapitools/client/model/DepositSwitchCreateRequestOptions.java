/*
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Options to configure the &#x60;/deposit_switch/create&#x60; request. If provided, cannot be &#x60;null&#x60;.
 */
@ApiModel(description = "Options to configure the `/deposit_switch/create` request. If provided, cannot be `null`.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-13T10:01:14.758140-04:00[America/New_York]")
public class DepositSwitchCreateRequestOptions {
  public static final String SERIALIZED_NAME_WEBHOOK = "webhook";
  @SerializedName(SERIALIZED_NAME_WEBHOOK)
  private String webhook;

  public static final String SERIALIZED_NAME_TRANSACTION_ITEM_ACCESS_TOKENS = "transaction_item_access_tokens";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ITEM_ACCESS_TOKENS)
  private List<String> transactionItemAccessTokens = null;

  public DepositSwitchCreateRequestOptions() { 
  }

  public DepositSwitchCreateRequestOptions webhook(String webhook) {
    
    this.webhook = webhook;
    return this;
  }

   /**
   * The URL registered to receive webhooks when the status of a deposit switch request has changed. 
   * @return webhook
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URL registered to receive webhooks when the status of a deposit switch request has changed. ")

  public String getWebhook() {
    return webhook;
  }


  public void setWebhook(String webhook) {
    this.webhook = webhook;
  }


  public DepositSwitchCreateRequestOptions transactionItemAccessTokens(List<String> transactionItemAccessTokens) {
    
    this.transactionItemAccessTokens = transactionItemAccessTokens;
    return this;
  }

  public DepositSwitchCreateRequestOptions addTransactionItemAccessTokensItem(String transactionItemAccessTokensItem) {
    if (this.transactionItemAccessTokens == null) {
      this.transactionItemAccessTokens = new ArrayList<>();
    }
    this.transactionItemAccessTokens.add(transactionItemAccessTokensItem);
    return this;
  }

   /**
   * An array of access tokens corresponding to transaction items to use when attempting to match the user to their Payroll Provider. These tokens must be created by the same client id as the one creating the switch, and have access to the transactions product.
   * @return transactionItemAccessTokens
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of access tokens corresponding to transaction items to use when attempting to match the user to their Payroll Provider. These tokens must be created by the same client id as the one creating the switch, and have access to the transactions product.")

  public List<String> getTransactionItemAccessTokens() {
    return transactionItemAccessTokens;
  }


  public void setTransactionItemAccessTokens(List<String> transactionItemAccessTokens) {
    this.transactionItemAccessTokens = transactionItemAccessTokens;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DepositSwitchCreateRequestOptions depositSwitchCreateRequestOptions = (DepositSwitchCreateRequestOptions) o;
    return Objects.equals(this.webhook, depositSwitchCreateRequestOptions.webhook) &&
        Objects.equals(this.transactionItemAccessTokens, depositSwitchCreateRequestOptions.transactionItemAccessTokens);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(webhook, transactionItemAccessTokens);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DepositSwitchCreateRequestOptions {\n");
    sb.append("    webhook: ").append(toIndentedString(webhook)).append("\n");
    sb.append("    transactionItemAccessTokens: ").append(toIndentedString(transactionItemAccessTokens)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("webhook");
    openapiFields.add("transaction_item_access_tokens");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to DepositSwitchCreateRequestOptions
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (DepositSwitchCreateRequestOptions.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in DepositSwitchCreateRequestOptions is not found in the empty JSON string", DepositSwitchCreateRequestOptions.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!DepositSwitchCreateRequestOptions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DepositSwitchCreateRequestOptions` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("webhook") != null && !jsonObj.get("webhook").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webhook` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webhook").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("transaction_item_access_tokens") != null && !jsonObj.get("transaction_item_access_tokens").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `transaction_item_access_tokens` to be an array in the JSON string but got `%s`", jsonObj.get("transaction_item_access_tokens").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DepositSwitchCreateRequestOptions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DepositSwitchCreateRequestOptions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DepositSwitchCreateRequestOptions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DepositSwitchCreateRequestOptions.class));

       return (TypeAdapter<T>) new TypeAdapter<DepositSwitchCreateRequestOptions>() {
           @Override
           public void write(JsonWriter out, DepositSwitchCreateRequestOptions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DepositSwitchCreateRequestOptions read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DepositSwitchCreateRequestOptions given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DepositSwitchCreateRequestOptions
  * @throws IOException if the JSON string is invalid with respect to DepositSwitchCreateRequestOptions
  */
  public static DepositSwitchCreateRequestOptions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DepositSwitchCreateRequestOptions.class);
  }

 /**
  * Convert an instance of DepositSwitchCreateRequestOptions to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

