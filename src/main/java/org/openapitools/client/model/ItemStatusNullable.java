/*
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.ItemStatus;
import org.openapitools.client.model.ItemStatusInvestments;
import org.openapitools.client.model.ItemStatusLastWebhook;
import org.openapitools.client.model.ItemStatusTransactions;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information about the last successful and failed transactions update for the Item.
 */
@ApiModel(description = "Information about the last successful and failed transactions update for the Item.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-13T10:01:14.758140-04:00[America/New_York]")
public class ItemStatusNullable {
  public static final String SERIALIZED_NAME_INVESTMENTS = "investments";
  @SerializedName(SERIALIZED_NAME_INVESTMENTS)
  private ItemStatusInvestments investments;

  public static final String SERIALIZED_NAME_TRANSACTIONS = "transactions";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONS)
  private ItemStatusTransactions transactions;

  public static final String SERIALIZED_NAME_LAST_WEBHOOK = "last_webhook";
  @SerializedName(SERIALIZED_NAME_LAST_WEBHOOK)
  private ItemStatusLastWebhook lastWebhook;

  public ItemStatusNullable() { 
  }

  public ItemStatusNullable investments(ItemStatusInvestments investments) {
    
    this.investments = investments;
    return this;
  }

   /**
   * Get investments
   * @return investments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemStatusInvestments getInvestments() {
    return investments;
  }


  public void setInvestments(ItemStatusInvestments investments) {
    this.investments = investments;
  }


  public ItemStatusNullable transactions(ItemStatusTransactions transactions) {
    
    this.transactions = transactions;
    return this;
  }

   /**
   * Get transactions
   * @return transactions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemStatusTransactions getTransactions() {
    return transactions;
  }


  public void setTransactions(ItemStatusTransactions transactions) {
    this.transactions = transactions;
  }


  public ItemStatusNullable lastWebhook(ItemStatusLastWebhook lastWebhook) {
    
    this.lastWebhook = lastWebhook;
    return this;
  }

   /**
   * Get lastWebhook
   * @return lastWebhook
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ItemStatusLastWebhook getLastWebhook() {
    return lastWebhook;
  }


  public void setLastWebhook(ItemStatusLastWebhook lastWebhook) {
    this.lastWebhook = lastWebhook;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemStatusNullable itemStatusNullable = (ItemStatusNullable) o;
    return Objects.equals(this.investments, itemStatusNullable.investments) &&
        Objects.equals(this.transactions, itemStatusNullable.transactions) &&
        Objects.equals(this.lastWebhook, itemStatusNullable.lastWebhook);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(investments, transactions, lastWebhook);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemStatusNullable {\n");
    sb.append("    investments: ").append(toIndentedString(investments)).append("\n");
    sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
    sb.append("    lastWebhook: ").append(toIndentedString(lastWebhook)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("investments");
    openapiFields.add("transactions");
    openapiFields.add("last_webhook");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ItemStatusNullable
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ItemStatusNullable.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ItemStatusNullable is not found in the empty JSON string", ItemStatusNullable.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ItemStatusNullable.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ItemStatusNullable` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ItemStatusNullable.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ItemStatusNullable' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ItemStatusNullable> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ItemStatusNullable.class));

       return (TypeAdapter<T>) new TypeAdapter<ItemStatusNullable>() {
           @Override
           public void write(JsonWriter out, ItemStatusNullable value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ItemStatusNullable read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ItemStatusNullable given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ItemStatusNullable
  * @throws IOException if the JSON string is invalid with respect to ItemStatusNullable
  */
  public static ItemStatusNullable fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ItemStatusNullable.class);
  }

 /**
  * Convert an instance of ItemStatusNullable to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

